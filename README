160301 - No Commit
Progress this week:
	Prepared a use case diagram (see attached);
	Prepared 6 no. use cases (see attached);
	Researched what Azure is about and what it could offer me;
Next week:
	Subscribe to Azure;
	Consider creating a few prototypes or at least test the best format for my data and maybe create a text database with accompanying Excel spreadsheet;
	Structure my report and update accordingly;
	Prepare a mock-up for each screen;
	Create a Home Screen layout.

160313 - First Commit
Work done to-date:
	Formatted and started the Application Development Report;
	Finalised Use Case tables;
	Designed the database but did not construct tables yet;
	Prepared screen mock-ups;
	Checked out and registered for Azure;
	Started to code the home screen page;
	Uploaded to GitHub;
Work to be done next:
	Finish coding Home Screen;
	Start coding next Screen;
	Check out how to create (and maybe create) database tables on Azure;
	Update Report;
	Upload to GitHub.

160403 - Second Commit
Work done to-date:
	Finished coding all preference screens;
	90% coding main counting screen for a T-Junction complete;
	Had saved data to file internally but decided to abandon this for a database;
	Started to create a SQLite database tables;
	Did not update Report;
	Uploaded to GitHub;
Work to be done next:
	Finish coding SQLite database;
	Start coding next counting screen for a cross-Junction;
	Figure out how to align text vertically or use alternate way
	Figure out how to use button in preference screen
	Upload to GitHub.

160409 - Third Commit
Work done this week:
	Got the SQLite database to work
	Tidied up member variables and now using a better naming convention
	Uploaded to GitHub (i.e. 160409 - Third Commit)
Work to be done next week:
	Need to figure out how to setContentView to a certain fragment layout depending on what
		junction type image is selected (using Extra and intent).
		This is where I am at the moment:

		imageView.setImageResource(intent.getIntExtra(JntTypeSelectFragment.EXTRA_RES_ID, 0));
		if(???==0)
    			setContentView(R.layout.frag_t_junct);

		if(???==1)
			setContentView(R.layout.frag_cross_junct);

		if(???==2)
			setContentView(R.layout.frag_cross_junct);
		else
			setContentView(R.layout.testing_fragment);

160409 - Fourth Commit
Work done last week:
	Got the various junction types to inflate and active following the user selecting  an image from the GridView fragment.
	Managed to activate an intent from the sharedpreference xml (but wasn't able to get the previous button image to do this but instead the user has to click on the text).
	Worked on the layouts to make them more screen size and oritation friendly.
	Can now get gps long and lat for my position and add these with all other location preferences to their Location_Table in the db.
	Can also take picture of the junction.
I have one problem with my code which i am stuck on. I have all the code in place to upload a "testImageBitmap" to my database and am able to retrieve it from the db in the form of a Blob.
Problem is when I replace the "testImageBitmap" with the actual photo taken. I cant get a value to the mImageBitmap variable used in your PhotoIntentActivity app. I changed mImageBitmap
varible from private to public in your activity class and even tried to insert a getImageForDb method which I call within my DbJntAdd activity but it seems to return with a null exception
which crashes the app. I'm going to skip this for the moment and work on other aspects of my app and maybe return to it if there is time.

Work to be done next week
Repeat code for all my shared preferences (ie get them to add to their associated tables in the db.)
Maybe work on inserting a countdown clock (currently I simply use a digital clock widget).
Work on the report
Work on my slides
Work on my screencast
Work on tidying up and beautifying my app if there is time
Submit
